#include <Adafruit_GFX.h>
#include <Adafruit_SSD1331.h>
#include <SPI.h>
#include <Wire.h>

#define sclk 13
#define mosi 11
#define cs 10
#define rst 9
#define dc 8
// Color definitions
#define BLACK 0x0000
#define BLUE 0x001F
#define RED 0xF800
#define GREEN 0x07E0
#define CYAN 0x07FF
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF
Adafruit_SSD1331 display = Adafruit_SSD1331(cs, dc, rst);

// 'Arrow_left', size 17x70px
const unsigned char arrow_left[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x03, 0xc0, 0x00, 0x07,
    0xe0, 0x00, 0x0f, 0xf0, 0x00, 0x1f, 0xf8, 0x00, 0x3b, 0xdc, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0,
    0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00,
    0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03,
    0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0,
    0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00,
    0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03,
    0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0,
    0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00,
    0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03,
    0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0,
    0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00,
    0x03, 0xc0, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00};

// 'Arrow_Right_Full', size 18x45px
const unsigned char arrow_right[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x3f, 0x00, 0x00, 0x3f,
    0x00, 0x00, 0x3f, 0x80, 0x00, 0x3b, 0xc0, 0x00, 0x11, 0xe0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x78,
    0x00, 0x00, 0x3c, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x06, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00,
    0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07,
    0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00,
    0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// 'Arrow_Right_1/3_line', size 10x11px
const unsigned char arrow_right_1[] PROGMEM = {
    0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// 'Arrow_Right_2/3_line', 10x22px
const unsigned char arrow_right_2[] PROGMEM = {
    0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00,
    0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00,
    0x1e, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// 'Arrow_Right_3/3_line', 10x29px
const unsigned char arrow_right_3[] PROGMEM = {
    0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00,
    0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00,
    0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1e, 0x00,
    0x1e, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

void Animation()
{
    //arrow right animation - delay necessary
    display.drawBitmap(35, 101, arrow_right_1, 10, 11, WHITE, BLACK);
    delay(500);
    display.drawBitmap(35, 90, arrow_right_2, 10, 22, WHITE, BLACK);
    delay(500);
    display.drawBitmap(36, 83, arrow_right_3, 10, 29, WHITE, BLACK);
    delay(500);
    display.drawBitmap(28, 70, arrow_right, 18, 45, WHITE, BLACK);
    delay(500);
    display.fillRect(25, 68, 20, 45, BLACK);
}

void setup()
{
    display.begin();
    // Settings for Display

  

    display.fillScreen(BLACK);
    delay(1000);
    display.setTextColor(WHITE);
    display.setTextSize(1);

    //Text and arrow left without animation - no delay necessary
    display.setTextSize(3);
    display.setCursor(18, 10);
    display.print("80");
    display.setTextSize(1);
    display.setCursor(5, 120);
    display.print("Einordnen");
    display.drawFastHLine(2, 115, 58, WHITE);
    display.drawBitmap(13, 45, arrow_left, 17, 70, WHITE, BLACK);

    /*display.fillScreen(RED);
  delay(300);
  display.fillScreen(GREEN);
  delay(300);
  display.fillScreen(BLUE);
  delay(300);
  display.fillScreen(BLACK);
  delay(1000);
  display.setCursor(20, 5);
  display.setTextColor(WHITE);
  display.setTextSize(2);
  display.print("Hello");
  display.setCursor(8, 25);
  display.setTextColor(RED);
  display.setTextSize(2);
  display.print("YouTUBE");
  display.fillRect(10, 40, 75, 20, RED);
  display.setCursor(20, 47);
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.print("Subscribe");
  display.drawRect(0, 0, 96, 64, WHITE);
  delay(1000);*/
}
void loop()
{
    /*display.fillRect(10, 40, 75, 20, BLACK);
  delay(1000);
  display.fillRect(10, 40, 75, 20, RED);
  display.setCursor(20, 47);
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.print("Subscribe");
  delay(1000);*/
}